(0.796310917453653,
 {'model__base_estimator': DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=5,
              max_features=None, max_leaf_nodes=None,
              min_impurity_decrease=0.0, min_impurity_split=None,
              min_samples_leaf=1, min_samples_split=2,
              min_weight_fraction_leaf=0.0, presort=False, random_state=None,
              splitter='best'),
  'model__n_estimators': 200,
  'pca_chooser__base_transformer': None,
  'preparation__cap_gain_loss_pipeline__custom_cap_gain_minus_loss__combine': True,
  'preparation__cap_gain_loss_pipeline__custom_transform__base': 2.718281828459045,
  'preparation__num_pipeline__combine_agehours__combine': False})
==============================================================================================================
[{'model__n_estimators': [100, 200, 300],
  'model__base_estimator__min_samples_split': [0.005, 0.0075, 0.01],
  'model__base_estimator__max_depth': [3, 5, 8]}]

(0.8000698226740042,
 {'model__base_estimator__max_depth': 8,
  'model__base_estimator__min_samples_split': 0.01,
  'model__n_estimators': 300})
==============================================================================================================
[{'model__n_estimators': [400, 500, 600],
  'model__base_estimator__min_samples_split': [0.02, 0.03, 0.04],
  'model__base_estimator__max_depth': [8, 14, 20]}]
(0.801207275127164,
 {'model__base_estimator__max_depth': 8,
  'model__base_estimator__min_samples_split': 0.04,
  'model__n_estimators': 500})
==============================================================================================================
NOTE - Changed from sklearn roc_auc_score to binary auc score
==============================================================================================================
[{'model__n_estimators': [400, 500, 600],
  'model__base_estimator__min_samples_split': [0.04, 0.05, 0.6],
  'model__base_estimator__max_depth': [6, 8, 10]}]

(0.802134453643483,
 {'model__base_estimator__max_depth': 8,
  'model__base_estimator__min_samples_split': 0.6,
  'model__n_estimators': 600})
==============================================================================================================
==============================================================================================================
==============================================================================================================
==============================================================================================================
==============================================================================================================
Randomized Search 

(0.8440747651876712,
 {'model__max_depth': 3,
  'model__min_child_weight': 3,
  'model__n_estimators': 491})

==============================================================================================================
params_dict
{'max_features': [0.4, 0.5, 0.6, 0.7, 0.8], 'max_depth': [10, 25, 50, 75, 100]}

tuner.results.best_hyper_params
{'max_features': 0.4, 'max_depth': 10}

tuner.results.best_model_resampler_object.score_means
{'AUC_ROC': 0.9174845732651005,
 'F_BETA': 0.7283406320335294,
 'sensitivity': 0.6573921476641793,
 'positive_predictive_value': 0.7485876959122099}
==============================================================================================================
params_dict
{'max_features': [0.1, 0.2, 0.3, 0.4], 'max_depth': [2, 4, 6, 8, 10]}

tuner.results.best_hyper_params
{'max_features': 0.3, 'max_depth': 2}

tuner.results.best_model_resampler_object.score_means
{'AUC_ROC': 0.9262236088439127,
 'F_BETA': 0.7482161312880271,
 'sensitivity': 0.6628228612633548,
 'positive_predictive_value': 0.7731856188642356}
 =============================================================================================================
 params_dict
{'min_samples_split': [0.3, 0.4, 0.5], 'min_samples_leaf': [0.005, 0.01, 0.02]}

tuner.results.best_hyper_params
{'min_samples_split': 0.5, 'min_samples_leaf': 0.005}

tuner.results.best_model_resampler_object.score_means
{'AUC_ROC': 0.9282222726807866,
 'F_BETA': 0.7515396455426956,
 'sensitivity': 0.6657898952876353,
 'positive_predictive_value': 0.7766016646789474}
==============================================================================================================
{'min_samples_split': [0.5, 0.6, 0.7],
 'min_samples_leaf': [0.001, 0.0025, 0.005]}

tuner.results.best_hyper_params
{'min_samples_split': 0.7, 'min_samples_leaf': 0.0025}

tuner.results.best_model_resampler_object.score_means
{'AUC_ROC': 0.9285750042193898,
 'F_BETA': 0.7533736266973513,
 'sensitivity': 0.6658843952699326,
 'positive_predictive_value': 0.7790090938285821}
==============================================================================================================
params_dict
{'min_samples_split': [0.65, 0.7, 0.75],
 'min_samples_leaf': [0.003, 0.0035, 0.004, 0.0045, 0.005]}

tuner.results.best_hyper_params
{'min_samples_split': 0.7, 'min_samples_leaf': 0.004}

tuner.results.best_model_resampler_object.score_means
{'AUC_ROC': 0.928674019730682,
 'F_BETA': 0.7530521094110074,
 'sensitivity': 0.6666251263631361,
 'positive_predictive_value': 0.7783317184267398}

